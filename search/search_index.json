{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Revit","text":"The loopdevs document ai"},{"location":"#fluxo","title":"Fluxo","text":"<p>Fluxo da arquitetura do Revit:</p> <pre><code>architecture-beta\n    group front(cloud)[Front End]\n    group back(cloud)[Back End]\n\n    service react(server)[React with Nextjs] in front\n\n    service fastapi(server)[FastAPI] in back\n    service transformer(server)[Transformer] in back\n    service model(database)[Model mT5_multilingual_XLSum] in back\n    service python(server)[Python] in back\n\n    service user(internet)[Usuario]\n\n\n    user:R &lt;--&gt; L:react\n\n    react:R &lt;--&gt; L:fastapi\n    fastapi:R &lt;--&gt; L:python\n    python:R &lt;--&gt; L:transformer\n    transformer:R &lt;--&gt; L:model\n\n\n</code></pre>"},{"location":"#_1","title":"Revit","text":"<ol> <li>INTRODU\u00c7\u00c3O EM LINGUA NATIVA</li> </ol> <p>Com o crescente volume de informa\u00e7\u00f5es dispon\u00edveis em formato digital, surge a necessidade de ferramentas que facilitem o acesso r\u00e1pido e eficiente ao conte\u00fado essencial. Pensando nisso, o projeto Revit foi desenvolvido como uma solu\u00e7\u00e3o inovadora voltada para resumir arquivos PDF de maneira automatizada. Utilizando t\u00e9cnicas avan\u00e7adas de intelig\u00eancia artificial e processamento de linguagem natural, o Revit transforma documentos extensos em resumos curtos e claros, facilitando a compreens\u00e3o e economizando tempo para os usu\u00e1rios. Este trabalho explora o desenvolvimento do Revit, destacando sua arquitetura e funcionalidades.</p> <p>PALAVRAS-CHAVE: Revit \u2013 resumir PDF \u2013 economizar tempo \u2013 solu\u00e7\u00e3o inovadora \u2013 intelig\u00eancia artificial</p> <ol> <li>INTRODU\u00c7\u00c3O EM LINGUA ESTRANGEIRA</li> </ol> <p>With the increasing volume of information available in digital format, there is a growing need for tools that allow quick and efficient access to essential content. With this in mind, the Revit project was developed as an innovative solution for automated PDF summarization. Utilizing advanced artificial intelligence and natural language processing techniques, Revit transforms lengthy documents into concise and clear summaries, enhancing comprehension and saving user's time. This paper explores the development of Revit, highlighting its architecture and functionalities</p> <p>KEYWORDS: Revit \u2013 PDF summarization \u2013 saving time \u2013 innovative solution \u2013 artificial intelligence</p> <ol> <li> </li> </ol> <p>O Revit foi um desafio muito legal de se concluir. Aprendizado e trabalho em equipe resume todo esfor\u00e7o gasto no projeto. Abaixo, citamos detalhadamente toda as etapas desse projeto.</p>"},{"location":"#introducao","title":"INTRODU\u00c7\u00c3O","text":""},{"location":"#desenvolvimento","title":"DESENVOLVIMENTO","text":""},{"location":"#_2","title":"Revit","text":"<ol> <li>TECNOLOGIAS USADAS</li> </ol> <p>Este projeto utiliza uma combina\u00e7\u00e3o de tecnologias para entregar uma solu\u00e7\u00e3o robusta e escal\u00e1vel. A arquitetura \u00e9 dividida em tr\u00eas componentes principais: back-end, front-end e documenta\u00e7\u00e3o, cada um com ferramentas espec\u00edficas que otimizam o desenvolvimento, a execu\u00e7\u00e3o e a apresenta\u00e7\u00e3o do projeto. Abaixo, detalhamos as escolhas tecnol\u00f3gicas de cada parte e o motivo de sua sele\u00e7\u00e3o.</p> <ol> <li>Back-End</li> </ol> <p>O back-end \u00e9 desenvolvido em Python e utiliza v\u00e1rias bibliotecas especializadas para oferecer uma API eficiente e de alta performance para processar documentos em PDF e gerar resumos. Fora as bibliotecas padr\u00f5es j\u00e1 fornecidas na instala\u00e7\u00e3o do python, foram utilizadas:</p> <ol> <li> <p>FastAPI: FastAPI \u00e9 o framework principal usado para criar a API do projeto. Ele \u00e9 conhecido pela sua alta performance e suporte nativo para opera\u00e7\u00f5es ass\u00edncronas, o que permite que o sistema lide com m\u00faltiplas requisi\u00e7\u00f5es simult\u00e2neas de forma eficiente. A FastAPI tamb\u00e9m facilita a cria\u00e7\u00e3o de endpoints bem documentados, tornando a integra\u00e7\u00e3o com o front end mais simples e segura.</p> </li> <li> <p>Transformers: A biblioteca transformers, desenvolvida pela Hugging Face, \u00e9 utilizada para trabalhar com modelos de aprendizado profundo, como o mT5. Essa biblioteca permite f\u00e1cil integra\u00e7\u00e3o com modelos pr\u00e9-treinados para tarefas de NLP (Processamento de Linguagem Natural), incluindo sumariza\u00e7\u00e3o. A utiliza\u00e7\u00e3o de transformers possibilita o processamento e a gera\u00e7\u00e3o de resumos de forma eficiente e com alto n\u00edvel de precis\u00e3o.</p> </li> <li> <p>Datasets: Tamb\u00e9m da Hugging Face, a biblioteca datasets oferece acesso a uma vasta gama de conjuntos de dados, incluindo o XLSum, que \u00e9 essencial para treinar e avaliar o modelo de sumariza\u00e7\u00e3o. Essa biblioteca permite carregar e manipular conjuntos de dados de maneira eficiente, o que \u00e9 crucial para o desempenho do sistema de resumo.</p> </li> <li> <p>TensorFlow: TensorFlow \u00e9 uma das bibliotecas de aprendizado de m\u00e1quina mais populares, especialmente para treinamento e implementa\u00e7\u00e3o de modelos de deep learning. No projeto, TensorFlow \u00e9 utilizado para ajustar e otimizar o modelo transformer, garantindo que o modelo possa realizar infer\u00eancias r\u00e1pidas e gerar resumos de qualidade.</p> </li> <li> <p>PyPDF2: A biblioteca PyPDF2 \u00e9 utilizada para manipular arquivos PDF. Ela permite extrair o texto dos documentos, o que \u00e9 o primeiro passo no fluxo de processamento antes da gera\u00e7\u00e3o do resumo. A escolha do PyPDF2 se deve \u00e0 sua simplicidade e efic\u00e1cia na manipula\u00e7\u00e3o de PDFs, oferecendo fun\u00e7\u00f5es para leitura e manipula\u00e7\u00e3o de p\u00e1ginas e texto com facilidade.</p> </li> <li> <p>Front-End</p> </li> </ol> <p>O front-end \u00e9 desenvolvido com React e utiliza TypeScript e Next.js para criar uma interface de usu\u00e1rio din\u00e2mica, responsiva e escal\u00e1vel.</p> <ol> <li> <p>React: React \u00e9 uma das bibliotecas mais populares para o desenvolvimento de interfaces de usu\u00e1rio. Ele permite a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis e facilita o gerenciamento do estado da aplica\u00e7\u00e3o. No projeto, React permite criar uma interface intuitiva, onde os usu\u00e1rios podem fazer o upload de arquivos PDF e visualizar os resumos gerados.</p> </li> <li> <p>TypeScript: A escolha por TypeScript em conjunto com React traz benef\u00edcios significativos em termos de seguran\u00e7a e manuten\u00e7\u00e3o do c\u00f3digo. TypeScript adiciona tipagem est\u00e1tica a JavaScript, o que ajuda a evitar erros comuns durante o desenvolvimento e facilita a escalabilidade da aplica\u00e7\u00e3o.</p> </li> <li> <p>Next.js: Next.js \u00e9 um framework React que facilita o desenvolvimento de aplica\u00e7\u00f5es web com renderiza\u00e7\u00e3o no lado do servidor (Server Side Rendering, SSR) e gera\u00e7\u00e3o de p\u00e1ginas est\u00e1ticas. Ele oferece uma excelente otimiza\u00e7\u00e3o de performance e SEO, al\u00e9m de suportar a cria\u00e7\u00e3o de rotas din\u00e2micas, o que \u00e9 \u00fatil para organizar as diferentes p\u00e1ginas da aplica\u00e7\u00e3o. No projeto, Next.js permite uma experi\u00eancia de usu\u00e1rio r\u00e1pida e otimizada.</p> </li> <li> <p>Documenta\u00e7\u00e3o</p> </li> </ol> <p>A documenta\u00e7\u00e3o \u00e9 uma parte fundamental do projeto, facilitando o entendimento do sistema para novos desenvolvedores e usu\u00e1rios. Para isso, foram utilizadas duas ferramentas principais:</p> <ol> <li> <p>Word: O Microsoft Word \u00e9 utilizado para a elabora\u00e7\u00e3o de documenta\u00e7\u00e3o formal e detalhada. Tamb\u00e9m foi o software principal para a entrega do projeto seguindo as normas ABNT. </p> </li> <li> <p>MkDocs: MkDocs \u00e9 uma ferramenta de c\u00f3digo aberto para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em sites est\u00e1ticos. Ele permite criar documenta\u00e7\u00e3o amig\u00e1vel e acess\u00edvel, com um layout moderno e navega\u00e7\u00e3o f\u00e1cil. Foi escolhido para ficar como documenta\u00e7\u00e3o dispon\u00edvel no pr\u00f3prio reposit\u00f3rio do c\u00f3digo fonte do Revit.</p> </li> <li> </li> </ol>"},{"location":"#modelo","title":"MODELO","text":""},{"location":"#_3","title":"Revit","text":"<p>A escolha de um modelo adequado para a tarefa de resumo autom\u00e1tico de textos foi um passo crucial na constru\u00e7\u00e3o de um sistema eficiente e preciso. No contexto da arquitetura apresentada, o modelo csebuetnlp/mT5_multilingual_XLSum foi selecionado devido \u00e0 sua capacidade de lidar com m\u00faltiplos idiomas e sua especializa\u00e7\u00e3o em sumariza\u00e7\u00e3o de textos longos. Este modelo combina a robustez do transformer mT5 com o extenso dataset XLSum, caracter\u00edsticas que justificam seu uso em uma aplica\u00e7\u00e3o que visa fornecer resumos concisos e contextualizados de documentos PDF. </p> <p>O mT5 \u00e9 uma variante multil\u00edngue do modelo T5 (Text-To-Text Transfer Transformer), que transforma qualquer tarefa de processamento de linguagem em um problema de texto para texto. Essa abordagem permite que o modelo mT5 execute diversas tarefas de NLP, como tradu\u00e7\u00e3o, resposta a perguntas e, especialmente, sumariza\u00e7\u00e3o, sem a necessidade de ajustes espec\u00edficos para cada idioma.</p> <p>A estrutura do mT5 \u00e9 baseada na arquitetura Transformer, que utiliza mecanismos de aten\u00e7\u00e3o para capturar rela\u00e7\u00f5es complexas entre palavras em uma frase e ao longo de frases em um texto. Esse modelo \u00e9 capaz de processar textos longos e extrair informa\u00e7\u00f5es contextuais ricas, o que \u00e9 essencial para produzir resumos que preservem o significado do documento original. Para uma aplica\u00e7\u00e3o que lida com documentos em portugu\u00eas e outros idiomas, o mT5 \u00e9 ideal, pois foi treinado para ser eficaz em uma grande variedade de l\u00ednguas, garantindo flexibilidade e precis\u00e3o na tarefa de sumariza\u00e7\u00e3o.</p> <p>O XLSum \u00e9 um dataset extenso e diversificado, desenvolvido para atender \u00e0s necessidades de sumariza\u00e7\u00e3o em m\u00faltiplos idiomas. Este dataset inclui dados de not\u00edcias e artigos informativos em mais de quarenta idiomas, incluindo o portugu\u00eas, o que permite ao modelo aprender padr\u00f5es lingu\u00edsticos e contextuais espec\u00edficos de cada idioma. A inclus\u00e3o do XLSum no treinamento do mT5 permitiu que o modelo se adaptasse melhor a varia\u00e7\u00f5es lingu\u00edsticas e culturais, essenciais para produzir resumos que capturem o tom e a inten\u00e7\u00e3o originais do texto.</p> <p>No contexto deste sistema, o uso do XLSum aprimora a capacidade do modelo de gerar resumos de alta qualidade para documentos PDF em portugu\u00eas. Esse aspecto \u00e9 particularmente relevante, pois garante que o modelo n\u00e3o apenas traduza as ideias principais, mas tamb\u00e9m respeite nuances lingu\u00edsticas e contextuais, tornando os resumos mais relevantes e compreens\u00edveis para os usu\u00e1rios finais.</p> <p>A combina\u00e7\u00e3o do modelo mT5 com o dataset XLSum resultou no modelo csebuetnlp/mT5_multilingual_XLSum, uma vers\u00e3o especializada para tarefas de sumariza\u00e7\u00e3o em m\u00faltiplos idiomas. Esse modelo oferece v\u00e1rios benef\u00edcios espec\u00edficos para o sistema de resumos:</p> <ul> <li>Multilinguismo: Ao utilizar o mT5 e o XLSum, o modelo \u00e9 capaz de gerar resumos em mais de quarenta idiomas, o que o torna adequado para usu\u00e1rios de diferentes regi\u00f5es e origens lingu\u00edsticas.</li> <li>Precis\u00e3o Contextual: O modelo n\u00e3o apenas sintetiza o conte\u00fado, mas tamb\u00e9m mant\u00e9m a precis\u00e3o contextual, reproduzindo fielmente as principais ideias do documento original.</li> <li> <p>Adaptabilidade a Textos Longos: Projetado para documentos extensos e informativos, o csebuetnlp/mT5_multilingual_XLSum consegue lidar com textos complexos, mantendo a coer\u00eancia no resumo final.</p> </li> <li> <p>TREINAMENTO DO MODELO</p> </li> </ul> <p>O modelo foi treinado com o datase xlsum por csebuetnlp. Dataset completo e um ponto muito importate: Sua quantidade extensa de linguages (ao todo 45). A maior origem de seus dados \u00e9 a pr\u00f3pria BBC (site de noticias).</p> <p>Os campos contidos em seus dados s\u00e3o:</p> <ul> <li>Id = C\u00f3digo da reportagem/noticia</li> <li>url = Caminho da web para reportagem/noticia</li> <li>title = T\u00edtulo da reportagem/noticia</li> <li>summary = Resumo da reportagem/noticia</li> <li> <p>text = Reportagem/noticia</p> </li> <li> </li> </ul> <p>No front-end, temos uma interface de usu\u00e1rio desenvolvida com React em conjunto com o Next.js, uma estrutura que facilita a renderiza\u00e7\u00e3o de p\u00e1ginas no lado do servidor (SSR - Server Side Rendering), al\u00e9m de possibilitar a constru\u00e7\u00e3o de aplica\u00e7\u00f5es web altamente responsivas e escal\u00e1veis. Este ambiente permite que o usu\u00e1rio fa\u00e7a upload de arquivos PDF e envie as requisi\u00e7\u00f5es para o back-end, buscando uma experi\u00eancia intuitiva e r\u00e1pida.</p> <p>O back-end, por sua vez, \u00e9 composto por uma s\u00e9rie de camadas especializadas, cada uma desempenhando uma fun\u00e7\u00e3o cr\u00edtica para o funcionamento do sistema de resumo. Esse m\u00f3dulo \u00e9 desenvolvido em Python e utiliza FastAPI como framework principal para a constru\u00e7\u00e3o de APIs RESTful, o que facilita a comunica\u00e7\u00e3o entre o front-end e as camadas de processamento e modelagem. A FastAPI \u00e9 uma escolha ideal para este tipo de aplica\u00e7\u00e3o devido \u00e0 sua alta performance e suporte a opera\u00e7\u00f5es ass\u00edncronas, o que permite o manuseio eficiente de m\u00faltiplas requisi\u00e7\u00f5es simult\u00e2neas.</p> <p>No n\u00facleo do processamento de linguagem natural, a arquitetura utiliza a tecnologia Transformer<sup>1</sup>, que \u00e9 o padr\u00e3o atual para modelos de aprendizado profundo em tarefas de NLP <sup>2</sup>(Natural Language Processing). </p> <p>O modelo espec\u00edfico utilizado para o resumo \u00e9 o mT5 (Multilingual Text-To-Text Transfer Transformer), uma variante multil\u00edngue do T5 (Text-To-Text Transfer Transformer), que \u00e9 treinado em uma vasta gama de idiomas e capaz de realizar v\u00e1rias tarefas de NLP, incluindo sumariza\u00e7\u00e3o. O dataset XLSum, adaptado para o portugu\u00eas e outros idiomas, \u00e9 utilizado para o treinamento do modelo, garantindo que os resumos produzidos sejam adequados a contextos e nuances lingu\u00edsticas variadas. A escolha deste modelo e dataset \u00e9 estrat\u00e9gica para maximizar a precis\u00e3o e relev\u00e2ncia dos resumos gerados, independentemente do idioma do documento.</p> <p>Figura 2 - Fluxo</p>"},{"location":"#fluxo-da-informacao","title":"FLUXO DA INFORMAC\u00c3O","text":"<p>## A arquitetura apresentada abaixo busca fornecer um servi\u00e7o de resumo de textos a partir de arquivos PDF, utilizando um modelo de aprendizado capaz de processar documentos em diversas l\u00ednguas. O fluxo divide-se em duas principais camadas: o Front-End e o Back-End, cada uma com responsabilidades espec\u00edficas que, em conjunto, permitem ao usu\u00e1rio interagir e obter resumos precisos e relevantes. A seguir, detalhamos cada componente.</p>"},{"location":"#_4","title":"Revit","text":"<ol> <li>BACKEND</li> </ol> <p>Como a biblioteca escolhida foi a FastAPI, o desenvolvimento da API <sup>3</sup>e Endpoints<sup>4</sup>** foi acelerado e muito conciso.</p> <p>No geral, apenas uma rota foi necess\u00e1ria para a cria\u00e7\u00e3o do Revit. Basicamente a rota serviu para exercer as seguintes fun\u00e7\u00f5es:</p> <ol> <li>Receber um arquivo .pdf</li> <li>Ler o arquivo</li> <li>Resumir o arquivo</li> <li>Retornar o resumo e seus detalhes</li> </ol> <p>Figura 3 - FastAPI</p> <ol> <li>FRONTEND</li> </ol> <p>O front-end se tornou uma tarefa menos \u00e1rdua devido a todo detalhamento/desenho previamente feito utilizando a ferramenta figma<sup>5</sup>.</p> <p>Ao todo foram desenhadas 6 telas (contando com seus respectivos temas: claro, escuro).</p> <p>O usu\u00e1rio tem as poss\u00edveis 5 a\u00e7\u00f5es dentro do Revit:</p> <ul> <li>Avan\u00e7ar para a p\u00e1gina de upload do arquivo</li> <li>Realizar upload do arquivo</li> <li>Alterar o tema</li> <li>Navegar pela resposta do resumo (caso ela ocupe um espa\u00e7o maior do predefinido)</li> <li> <p>Voltar para a home</p> </li> <li> </li> </ul> <p>O Revit \u00e9 uma aplica\u00e7\u00e3o de c\u00f3digo aberto. Voc\u00ea pode contribuir e ver o c\u00f3digo fonte do mesmo.</p> <p>Atrav\u00e9s do reposit\u00f3rio voc\u00ea pode cessar o c\u00f3digo fonte e tamb\u00e9m realizar uma contribui\u00e7\u00e3o atrav\u00e9s de um pull request, ou at\u00e9 mesmo utilizar como base para um projeto pessoal atrav\u00e9s de um fork!</p> <ol> <li> </li> </ol> <p>Este trabalho apresentou o desenvolvimento de um sistema completo para gera\u00e7\u00e3o de resumos autom\u00e1ticos de arquivos PDF, combinando tecnologias de ponta para atender a uma demanda crescente por solu\u00e7\u00f5es de processamento de linguagem natural (NLP). Atrav\u00e9s de uma arquitetura bem planejada, dividida em camadas de front-end, back-end e documenta\u00e7\u00e3o, o sistema consegue oferecer resumos precisos e contextuais de documentos em m\u00faltiplos idiomas, proporcionando uma experi\u00eancia pr\u00e1tica e eficiente aos usu\u00e1rios.</p> <p>No back-end, o uso de Python junto com bibliotecas como FastAPI, transformers, datasets, TensorFlow e PyPDF2 foi essencial para criar uma API robusta, capaz de processar PDFs e gerar resumos com alta precis\u00e3o. A escolha do modelo csebuetnlp/mT5_multilingual_XLSum, treinado para entender diferentes idiomas, possibilitou que o sistema atendesse a uma ampla gama de usu\u00e1rios, independentemente da l\u00edngua dos documentos.</p> <p>O front-end, desenvolvido com React, TypeScript e Next.js, permitiu a cria\u00e7\u00e3o de uma interface intuitiva e responsiva, onde os usu\u00e1rios podem facilmente interagir com o sistema, fazendo upload de documentos e visualizando os resumos. A renderiza\u00e7\u00e3o no lado do servidor oferecida pelo Next.js garante um desempenho otimizado e uma experi\u00eancia r\u00e1pida para o usu\u00e1rio.</p> <p>Em resumo, o trabalho conseguiu integrar tecnologias avan\u00e7adas de NLP e desenvolvimento web em uma solu\u00e7\u00e3o coesa, escal\u00e1vel e bem documentada. Esta plataforma de resumo autom\u00e1tico de PDF tem potencial para ser aplicada em diversos contextos, como acad\u00eamico e empresarial, auxiliando usu\u00e1rios a obter insights r\u00e1pidos e precisos de documentos complexos. A solu\u00e7\u00e3o apresentada oferece uma base s\u00f3lida para futuras melhorias e extens\u00f5es, como a adapta\u00e7\u00e3o para outros formatos de documentos ou a incorpora\u00e7\u00e3o de novos modelos de NLP, consolidando o sistema como uma ferramenta poderosa para an\u00e1lise e compreens\u00e3o de grandes volumes de informa\u00e7\u00f5es textuais.</p>"},{"location":"#contribuicao-codigo-fonte","title":"CONTRIBUI\u00c7\u00c3O / C\u00d3DIGO FONTE","text":""},{"location":"#conclusao","title":"CONCLUS\u00c3O","text":""},{"location":"#referencias","title":"REFER\u00caNCIAS","text":"<p>\u201cFine-Tune a Pretrained Model.\u201d Huggingface.co, HuggingFace, huggingface.co/docs/transformers/en/training. Accessed 10 Nov. 2024.</p> <p>csebuetnlp. \u201cMT5-Multilingual-XLSum\u201d Huggingface.co, HuggingFace, huggingface.co/csebuetnlp/mT5_multilingual_XLSum. Accessed 10 Nov. 2024.</p> <p>Hasan, Tahmid, et al. \u201cXL-Sum: Large-Scale Multilingual Abstractive Summarization for 44 Languages.\u201d ACLWeb, Association for Computational Linguistics, 1 Aug. 2021, aclanthology.org/2021.findings-acl.413. Accessed 10 Nov. 2024.</p> <ol> <li> <p>Biblioteca Python da HuggingFace\u00a0\u21a9</p> </li> <li> <p>Processamento de Linguagem Natural\u00a0\u21a9</p> </li> <li> <p>APIs s\u00e3o mecanismos que permitem que dois componentes de software se comuniquem usando um conjunto de defini\u00e7\u00f5es e protocolos\u00a0\u21a9</p> </li> <li> <p>Um endpoint de API \u00e9 o ponto de comunica\u00e7\u00e3o entre uma interface de programa\u00e7\u00e3o de aplicativos (API) e um cliente.\u00a0\u21a9</p> </li> <li> <p>Figma \u00e9 uma ferramenta de design vers\u00e1til e bastante popular entre designers.\u00a0\u21a9</p> </li> </ol>"}]}